{
    "pipes": [],
    "interfaces": [],
    "injectables": [
        {
            "name": "AttackService",
            "id": "injectable-AttackService-89fcc6a6f270260501371c30f02c005220cdc9b8366be2d02833363587754c1558601f6337547bc1981f61390607cfdc4f634676f8224a30d942a488198c2c0f",
            "file": "src/app/services/attack.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "getTop",
                    "args": [
                        {
                            "name": "type",
                            "type": "TopType",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "any",
                    "typeParameters": [],
                    "line": 18,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "type",
                            "type": "TopType",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import { Injectable } from '@angular/core';\nimport {HttpClient} from \"@angular/common/http\";\n\nexport type Top = {\n  item: string;\n  count: number;\n}\n\nexport type TopType = 'password' | 'username' | 'ip'\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AttackService {\n\n  constructor(private httpClient: HttpClient) { }\n\n  getTop(type: TopType) {\n    return this.httpClient.get<Top[]>(`http://localhost:8080/top?type=${type}`)\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "httpClient",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 14,
                "jsdoctags": [
                    {
                        "name": "httpClient",
                        "type": "HttpClient",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "type": "injectable"
        },
        {
            "name": "SseService",
            "id": "injectable-SseService-9d9df7a61bf9f9eed763007d5f43d2fe7b2379dfd01c0f6cfad5790e231612448a19e0f5a89026cb5967c9055ec66f233cc2a381f940c698e24c1f8677933c71",
            "file": "src/app/services/sse.service.ts",
            "properties": [],
            "methods": [
                {
                    "name": "getServerSentEvent",
                    "args": [
                        {
                            "name": "url",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": ""
                        }
                    ],
                    "optional": false,
                    "returnType": "Observable<AttackEvent>",
                    "typeParameters": [],
                    "line": 25,
                    "deprecated": false,
                    "deprecationMessage": "",
                    "jsdoctags": [
                        {
                            "name": "url",
                            "type": "string",
                            "deprecated": false,
                            "deprecationMessage": "",
                            "tagName": {
                                "text": "param"
                            }
                        }
                    ]
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "description": "",
            "rawdescription": "\n",
            "sourceCode": "import {Injectable, NgZone} from '@angular/core';\nimport {Observable} from \"rxjs\";\n\nexport type AttackEvent = {\n  timestamp: string,\n  username: string,\n  password: string,\n  ip: string,\n  ipDetails: IPDetails\n}\n\nexport type IPDetails = {\n  city: string,\n  country: string,\n  isp: string,\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SseService {\n\n  constructor(private _zone: NgZone) { }\n\n  getServerSentEvent(url: string): Observable<AttackEvent> {\n    return new Observable(observer => {\n      const eventSource = new EventSource(url);\n      eventSource.onmessage = event => {\n        const attackEvent = JSON.parse(event.data);\n        attackEvent.ipDetails = JSON.parse(attackEvent.ipDetails);\n\n        this._zone.run(() => {\n          observer.next(attackEvent);\n        });\n      };\n\n      eventSource.onerror = error => {\n        this._zone.run(() => {\n          observer.error(error);\n        });\n      };\n\n      return () => eventSource.close();\n    });\n  }\n}\n",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "_zone",
                        "type": "NgZone",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 21,
                "jsdoctags": [
                    {
                        "name": "_zone",
                        "type": "NgZone",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "type": "injectable"
        }
    ],
    "guards": [],
    "interceptors": [],
    "classes": [],
    "directives": [],
    "components": [
        {
            "name": "AppComponent",
            "id": "component-AppComponent-8f0800377374ebceada7385293880c3df7801453ae6480236a172606341cf0ac0477c18315d8c1881e43bb9a1d963e75e793f73db549ae68fedf4e79a5bcab0c",
            "file": "src/app/app.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-root",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./app.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "title",
                    "defaultValue": "'frontend'",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "string",
                    "optional": false,
                    "description": "",
                    "line": 13
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "RouterOutlet"
                },
                {
                    "name": "DashboardComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport { RouterOutlet } from '@angular/router';\nimport {DashboardComponent} from \"./dashboard/dashboard.component\";\n\n@Component({\n  selector: 'app-root',\n  standalone: true,\n  imports: [RouterOutlet, DashboardComponent],\n  templateUrl: './app.component.html',\n  styleUrl: './app.component.scss'\n})\nexport class AppComponent {\n  title = 'frontend';\n}\n",
            "styleUrl": "./app.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<app-dashboard></app-dashboard>\n"
        },
        {
            "name": "DashboardComponent",
            "id": "component-DashboardComponent-6ad5d4483956bce6c62a9ed8dfe120be38e33ba4fc444cbdf4755487d13bb02ce1ca066e5f4903371c5287f3be29acffb36da84252b343507779b62882a3519b",
            "file": "src/app/dashboard/dashboard.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-dashboard",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./dashboard.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "LiveAttacksComponent",
                    "type": "component"
                },
                {
                    "name": "TopContainerComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import { Component } from '@angular/core';\nimport {LiveAttacksComponent} from \"../components/live-attacks/live-attacks.component\";\nimport {\n  TopContainerComponent\n} from \"../components/top/top-container.component\";\n\n@Component({\n  selector: 'app-dashboard',\n  standalone: true,\n  imports: [\n    LiveAttacksComponent,\n    TopContainerComponent\n  ],\n  templateUrl: './dashboard.component.html',\n  styleUrl: './dashboard.component.scss'\n})\nexport class DashboardComponent {\n\n}\n",
            "styleUrl": "./dashboard.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<app-live-attacks></app-live-attacks>\n\n<app-top-container type=\"password\"></app-top-container>\n<app-top-container type=\"username\"></app-top-container>\n<app-top-container type=\"ip\"></app-top-container>\n\n"
        },
        {
            "name": "LiveAttacksComponent",
            "id": "component-LiveAttacksComponent-110b9611adcecec6c9124fa1f4409bb8e255c16b0928d4e8e9975c682e3abbc41ecfa35f1c24fad1a3bdf5cecee59968e7edbc170161b8595fca5318696ec3c5",
            "file": "src/app/components/live-attacks/live-attacks.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-live-attacks",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./live-attacks.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "attackEvents",
                    "defaultValue": "[]",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "AttackEvent[]",
                    "optional": false,
                    "description": "",
                    "line": 12
                }
            ],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {Component} from '@angular/core';\nimport {AttackEvent, SseService} from \"../../services/sse.service\";\n\n@Component({\n  selector: 'app-live-attacks',\n  standalone: true,\n  imports: [],\n  templateUrl: './live-attacks.component.html',\n  styleUrl: './live-attacks.component.scss'\n})\nexport class LiveAttacksComponent {\n  attackEvents: AttackEvent[] = [];\n\n  constructor(private sseService: SseService) {\n    this.sseService.getServerSentEvent('http://localhost:8080/attack-events')\n    .subscribe(event => {\n      this.attackEvents = [event, ...this.attackEvents]\n    });\n  }\n}\n",
            "styleUrl": "./live-attacks.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "sseService",
                        "type": "SseService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 12,
                "jsdoctags": [
                    {
                        "name": "sseService",
                        "type": "SseService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "templateData": "<h2>Live Attacks</h2>\n\n<div class=\"live-attacks\">\n  @for (event of attackEvents; track event) {\n    <div class=\"press-start-font\">{{ event.timestamp}} {{ event.ip}} {{ event.username}}:{{ event.password}}</div>\n  }\n</div>\n"
        },
        {
            "name": "TopContainerComponent",
            "id": "component-TopContainerComponent-d7c023032a35fad3cd013f7bf57184cf8dd0740251f05579424a6b8bb19c6f7736dc44ee52a60be69a1dafaa7c5f5811cb7abf1e6ff22b5ea7655af1aa1b8c61",
            "file": "src/app/components/top/top-container.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-top-container",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./top-container.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 18,
                    "type": "TopType",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [
                {
                    "name": "top",
                    "defaultValue": "of([])",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "Observable<Top[]>",
                    "optional": false,
                    "description": "",
                    "line": 20,
                    "modifierKind": [
                        124
                    ]
                }
            ],
            "methodsClass": [
                {
                    "name": "ngOnInit",
                    "args": [],
                    "optional": false,
                    "returnType": "void",
                    "typeParameters": [],
                    "line": 24,
                    "deprecated": false,
                    "deprecationMessage": ""
                }
            ],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "TopPresentationComponent",
                    "type": "component"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {Component, Input, OnInit} from '@angular/core';\nimport {Observable, of, switchMap, timer} from \"rxjs\";\nimport {AttackService, Top, TopType} from \"../../services/attack.service\";\nimport {\n  TopPresentationComponent\n} from \"./top-presentation/top-presentation.component\";\n\n@Component({\n  selector: 'app-top-container',\n  standalone: true,\n  imports: [\n    TopPresentationComponent\n  ],\n  templateUrl: './top-container.component.html',\n  styleUrl: './top-container.component.scss'\n})\nexport class TopContainerComponent implements OnInit {\n  @Input() type? : TopType\n\n  protected top: Observable<Top[]> = of([]);\n\n  constructor(private attackService: AttackService) {}\n\n  ngOnInit() {\n    this.top = timer(0, 5000)\n    .pipe(switchMap(() => this.attackService.getTop(this.type!!))) ;\n  }\n}\n\n\n\n",
            "styleUrl": "./top-container.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "constructorObj": {
                "name": "constructor",
                "description": "",
                "deprecated": false,
                "deprecationMessage": "",
                "args": [
                    {
                        "name": "attackService",
                        "type": "AttackService",
                        "deprecated": false,
                        "deprecationMessage": ""
                    }
                ],
                "line": 20,
                "jsdoctags": [
                    {
                        "name": "attackService",
                        "type": "AttackService",
                        "deprecated": false,
                        "deprecationMessage": "",
                        "tagName": {
                            "text": "param"
                        }
                    }
                ]
            },
            "extends": [],
            "implements": [
                "OnInit"
            ],
            "templateData": "<app-top-presentation\n  [top]=\"top\"\n  [type]=\"type\"\n></app-top-presentation>\n"
        },
        {
            "name": "TopPresentationComponent",
            "id": "component-TopPresentationComponent-211c330d7ef3f5a420ed3d3949b746fd4983aa4ba55ddbf7d33d074679e73d0dfaf33e40d44ba7643842860dfa65f01c9f0fe65b3a38620c953ec698262302a5",
            "file": "src/app/components/top/top-presentation/top-presentation.component.ts",
            "encapsulation": [],
            "entryComponents": [],
            "inputs": [],
            "outputs": [],
            "providers": [],
            "selector": "app-top-presentation",
            "styleUrls": [],
            "styles": [],
            "templateUrl": [
                "./top-presentation.component.html"
            ],
            "viewProviders": [],
            "hostDirectives": [],
            "inputsClass": [
                {
                    "name": "top",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 16,
                    "type": "Observable<Top[]>",
                    "decorators": []
                },
                {
                    "name": "type",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "line": 17,
                    "type": "TopType",
                    "decorators": []
                }
            ],
            "outputsClass": [],
            "propertiesClass": [],
            "methodsClass": [],
            "deprecated": false,
            "deprecationMessage": "",
            "hostBindings": [],
            "hostListeners": [],
            "standalone": true,
            "imports": [
                {
                    "name": "AsyncPipe",
                    "type": "pipe"
                }
            ],
            "description": "",
            "rawdescription": "\n",
            "type": "component",
            "sourceCode": "import {Component, Input} from '@angular/core';\nimport {AsyncPipe} from \"@angular/common\";\nimport {Top, TopType} from \"../../../services/attack.service\";\nimport {Observable} from \"rxjs\";\n\n@Component({\n  selector: 'app-top-presentation',\n  standalone: true,\n\timports: [\n\t\tAsyncPipe\n\t],\n  templateUrl: './top-presentation.component.html',\n  styleUrl: './top-presentation.component.scss'\n})\nexport class TopPresentationComponent {\n  @Input() top?: Observable<Top[]>\n  @Input() type?: TopType\n}\n",
            "styleUrl": "./top-presentation.component.scss",
            "assetsDirs": [],
            "styleUrlsData": "",
            "stylesData": "",
            "extends": [],
            "templateData": "<div class=\"top-passwords\">\n  <div>\n    <div class=\"headline\">\n      <h1 class=\"lato-regular\">Top 10 {{ type }}</h1>\n    </div>\n    <div class=\"grid lato-regular\">\n      <h3>\n        Password\n      </h3>\n      <h3>\n        Count\n      </h3>\n\n      @for (topItem of top | async; track topItem) {\n        <div>\n          {{ topItem.item }}\n        </div>\n        <div>\n          {{ topItem.count }}\n        </div>\n      }\n    </div>\n  </div>\n</div>\n"
        }
    ],
    "modules": [],
    "miscellaneous": {
        "variables": [
            {
                "name": "appConfig",
                "ctype": "miscellaneous",
                "subtype": "variable",
                "file": "src/app/app.config.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "type": "ApplicationConfig",
                "defaultValue": "{\n  providers: [provideZoneChangeDetection({ eventCoalescing: true }), provideRouter(routes), provideHttpClient()]\n}"
            }
        ],
        "functions": [],
        "typealiases": [
            {
                "name": "AttackEvent",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/services/sse.service.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 187
            },
            {
                "name": "IPDetails",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/services/sse.service.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 187
            },
            {
                "name": "Top",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "literal type",
                "file": "src/app/services/attack.service.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 187
            },
            {
                "name": "TopType",
                "ctype": "miscellaneous",
                "subtype": "typealias",
                "rawtype": "\"password\" | \"username\" | \"ip\"",
                "file": "src/app/services/attack.service.ts",
                "deprecated": false,
                "deprecationMessage": "",
                "description": "",
                "kind": 192
            }
        ],
        "enumerations": [],
        "groupedVariables": {
            "src/app/app.config.ts": [
                {
                    "name": "appConfig",
                    "ctype": "miscellaneous",
                    "subtype": "variable",
                    "file": "src/app/app.config.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "type": "ApplicationConfig",
                    "defaultValue": "{\n  providers: [provideZoneChangeDetection({ eventCoalescing: true }), provideRouter(routes), provideHttpClient()]\n}"
                }
            ]
        },
        "groupedFunctions": {},
        "groupedEnumerations": {},
        "groupedTypeAliases": {
            "src/app/services/sse.service.ts": [
                {
                    "name": "AttackEvent",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/services/sse.service.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 187
                },
                {
                    "name": "IPDetails",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/services/sse.service.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 187
                }
            ],
            "src/app/services/attack.service.ts": [
                {
                    "name": "Top",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "literal type",
                    "file": "src/app/services/attack.service.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 187
                },
                {
                    "name": "TopType",
                    "ctype": "miscellaneous",
                    "subtype": "typealias",
                    "rawtype": "\"password\" | \"username\" | \"ip\"",
                    "file": "src/app/services/attack.service.ts",
                    "deprecated": false,
                    "deprecationMessage": "",
                    "description": "",
                    "kind": 192
                }
            ]
        }
    },
    "routes": [],
    "coverage": {
        "count": 0,
        "status": "low",
        "files": [
            {
                "filePath": "src/app/app.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "AppComponent",
                "coveragePercent": 0,
                "coverageCount": "0/2",
                "status": "low"
            },
            {
                "filePath": "src/app/app.config.ts",
                "type": "variable",
                "linktype": "miscellaneous",
                "linksubtype": "variable",
                "name": "appConfig",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/components/live-attacks/live-attacks.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "LiveAttacksComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/components/top/top-container.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TopContainerComponent",
                "coveragePercent": 0,
                "coverageCount": "0/5",
                "status": "low"
            },
            {
                "filePath": "src/app/components/top/top-presentation/top-presentation.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "TopPresentationComponent",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/dashboard/dashboard.component.ts",
                "type": "component",
                "linktype": "component",
                "name": "DashboardComponent",
                "coveragePercent": 0,
                "coverageCount": "0/1",
                "status": "low"
            },
            {
                "filePath": "src/app/services/attack.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "AttackService",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            },
            {
                "filePath": "src/app/services/sse.service.ts",
                "type": "injectable",
                "linktype": "injectable",
                "name": "SseService",
                "coveragePercent": 0,
                "coverageCount": "0/3",
                "status": "low"
            }
        ]
    }
}